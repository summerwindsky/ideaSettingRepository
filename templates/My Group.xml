<templateSet group="My Group">
  <template name="ca" value="/**&#10; * Title: &#10; * Description: &#10; * Company: 北京华宇元典信息服务有限公司&#10; *&#10; * @author zhangjing&#10; * @version 1.0&#10; * @date $DATE$ $TIME$&#10; *&#10; */" description="class annotation" toReformat="false" toShortenFQNames="true">
    <variable name="DATE" expression="date()" defaultValue="" alwaysStopAt="true" />
    <variable name="TIME" expression="time()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="log" value="private static final Logger logger = LoggerFactory.getLogger($CLASS$.class);" description="slf4j log" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="className()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="pvt" value="@Test&#10;public void test" description="public void test" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="psfs" value="private static final String " description="private static final String" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="pvb" value="@Before    &#10;public void before() {     &#10;    $END$&#10;}" description="public void before" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="pva" value="@After    &#10;public void after() {     &#10;    $END$ &#10;} " description="public void after" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="mapl" value="Map&lt;$TYPE1$,$TYPE2$&gt; $name$ = new HashMap&lt;&gt;();&#10;$END$" description="" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="listl" value="List&lt;$PARAMETER$&gt; $name$ = new ArrayList&lt;&gt;();&#10;$END$" description="" toReformat="false" toShortenFQNames="true">
    <variable name="PARAMETER" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="psvmsp" value="    public static void main(String[] args) {&#10;        ApplicationContext applicationContext = new ClassPathXmlApplicationContext(&#10;                &quot;classpath:spring/applicationContxt.xml&quot;, &quot;classpath:spring/spring-datasource.xml&quot;,&#10;                 &quot;classpath:spring/spring-servlet.xml&quot;);&#10;&#10;        IFlysDao flysDao = (IFlysDao) applicationContext.getBean(&quot;flysDao&quot;);&#10;        .forEach(System.out::println);&#10;    }" description="spring bean test main" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="ps" value="private String " description="private String" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="unq" value="Object result = $CACHE_NAME$.get(String.valueOf($PARAMETER$),&#10;        x -&gt; getSession().createCriteria($RETURN_TYPE$.class)&#10;                .add(Restrictions.eq(&quot;$END$$PARAMETER$&quot;, $PARAMETER$)).setMaxResults(1)&#10;                .uniqueResult());&#10;return result == null ? null : ($RETURN_TYPE$) result;" description="fetch a unique model from database" toReformat="false" toShortenFQNames="true">
    <variable name="CACHE_NAME" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMETER" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="RETURN_TYPE" expression="methodReturnType()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="colle" value="$REF$&lt;$TYPE$&gt; $END$ = new $IMPLREF$();" description="Collections" toReformat="false" toShortenFQNames="true">
    <variable name="REF" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="IMPLREF" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="setl" value="Set&lt;$TYPE$&gt; $name$ = new HashSet&lt;&gt;();&#10;$END$" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="info" value="&quot;$CLASS$.$METHOD$ linenum:$LINE$, param:{$PARAM$} info:$MY$&quot;$END$" description="log info" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="className()" defaultValue="" alwaysStopAt="false" />
    <variable name="METHOD" expression="methodName()" defaultValue="" alwaysStopAt="false" />
    <variable name="LINE" expression="lineNumber()" defaultValue="" alwaysStopAt="false" />
    <variable name="PARAM" expression="groovyScript(&quot;_1.collect { it + ' = [\&quot; + ' + it + ' + \&quot;]'}.join(', ') &quot;,  methodParameters()) " defaultValue="" alwaysStopAt="false" />
    <variable name="MY" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="comment" value="// comment --$USER$-- $D$ ------&gt;$ANNOTATION$" description="comment" toReformat="false" toShortenFQNames="true">
    <variable name="USER" expression="" defaultValue="&quot;zhangjing&quot;" alwaysStopAt="false" />
    <variable name="D" expression="" defaultValue="date(&quot;YYYY-MM-DD hh:mm:ss&quot;)" alwaysStopAt="true" />
    <variable name="ANNOTATION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="exetime" value="long start$num$ = System.currentTimeMillis();&#10;$SELECTION$&#10;logger.info(&quot;$code$:{}ms&quot;, System.currentTimeMillis() - start$num$);&#10;$END$&#10;" description="print code execute expand time" toReformat="false" toShortenFQNames="true">
    <variable name="num" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="code" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="runtimeexception" value="throw new RuntimeException(&quot;$END&quot;);" description="throw new RuntimeException(&quot;&quot;);" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="foreach-count-trycatch" value="AtomicLong processCount = new AtomicLong();&#10;$PARM$.stream().forEach($X$ -&gt; {&#10;    try {&#10;        long currentCount = processCount.getAndIncrement();&#10;        if (currentCount % 1000 == 0) {&#10;            logger.info(&quot;count:{}&quot;, currentCount);&#10;        }&#10;        &#10;        $END$&#10;    } catch (Exception e) {&#10;        e.printStackTrace();&#10;    }&#10;});" toReformat="false" toShortenFQNames="true">
    <variable name="PARM" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="X" expression="" defaultValue="&quot;x&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="s-n-empty" value="if(StringUtils.isNotEmpty($VAR$)) {&#10;    $END$&#10;}" description="String not empty use StringUtils" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="c-n-empty" value="if(CollectionUtils.isNotEmpty($VAR$)) {&#10;    $END$&#10;}" description="Collections not Empty use CollectionsUtils" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="ne" value="if($PARM$.isNotEmpty($VAR$)) {&#10;    $END$&#10;}" description="not empty" toReformat="false" toShortenFQNames="true">
    <variable name="PARM" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="filel" value="File $name$ = new File(&quot;$END$&quot;);" description="new File" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="&quot;file&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>